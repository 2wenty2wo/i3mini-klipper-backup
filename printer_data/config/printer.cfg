# This file contains pin mappings for the Wanhao Duplicator i3 mini.
# (circa 2017) To use this config, the firmware should be compiled
# for the AVR atmega2560.
# Pin numbers and other parameters were extracted from the official
# Marlin source available at: https://github.com/garychen99/i3Mini

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]

[stepper_x]
step_pin: PA0
dir_pin: !PA1
enable_pin: !PF3
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PD2
position_endstop: 120
position_max: 120
homing_speed: 30.0

[stepper_y]
step_pin: PA3
dir_pin: PA4
enable_pin: !PA2
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PD3
position_endstop: 0
position_max: 135
homing_speed: 30.0

[stepper_z]
step_pin: PA7
dir_pin: PG2
enable_pin: !PA6
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop   # <— MUST be this
position_min: -2
position_max: 100

[extruder]
step_pin: PF1
dir_pin: PF2
enable_pin: !PF0
microsteps: 16
rotation_distance: 6.329
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PG5
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PK5
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 1
max_temp: 265

[fan]
pin: PB6

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0

[mcu rpi]
serial: /tmp/klipper_host_mcu

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[display]
lcd_type: uc1701
cs_pin: PG0
a0_pin: PG1
rst_pin: PA5
click_pin: ^!PE3
encoder_pins: ^PE5, ^PE4
kill_pin: ^!PK2
contrast: 60

[bltouch]
sensor_pin: ^PD7
control_pin: rpi:gpio17
x_offset: 0.0
y_offset: -37.5
#z_offset: 3.850
probe_with_touch_mode: False
pin_up_reports_not_triggered: True
pin_up_touch_mode_reports_triggered: False
pin_move_time: 0.50

# --- Probe-safe mesh limits (PROBE coordinates) ---
[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 5, 5          # PROBE coords (front/left)
mesh_max: 115, 97.5     # PROBE coords (back/right) -> keeps nozzle ≤ Y135
probe_count: 5,5
algorithm: bicubic

[gcode_macro G28]
rename_existing: G28.1
variable_do_kamp: 1
gcode:
  # Run the real homing first (respects your [safe_z_home])
  G28.1 {rawparams}

  # Auto-run adaptive mesh only on full home (no params) or Z-only home
  {% set full_home = (params.X is not defined and params.Y is not defined and params.Z is not defined) %}
  {% set z_only   = (params.Z is defined and params.X is not defined and params.Y is not defined) %}
  {% if do_kamp|int == 1 and (full_home or z_only) %}
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE ADAPTIVE=1
  {% endif %}

# (optional) quick toggles if you ever want to disable/enable the auto-mesh:
[gcode_macro KAMP_OFF]
gcode: SET_GCODE_VARIABLE MACRO=G28 VARIABLE=do_kamp VALUE=0
[gcode_macro KAMP_ON]
gcode:  SET_GCODE_VARIABLE MACRO=G28 VARIABLE=do_kamp VALUE=1

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    100,100,20

[gcode_macro ADXL_SANITY]
description: Check accelerometer is responding and noise is reasonable
gcode:
  RESPOND PREFIX=ADXL MSG="Querying accelerometer…"
  ACCELEROMETER_QUERY
  MEASURE_AXES_NOISE

[gcode_macro RESO_TUNE]
description: Home, warm nozzle, run SHAPER_CALIBRATE on X/Y, then prompt to SAVE_CONFIG
variable_temp: 200
gcode:
  {% set t = params.TEMP|default(printer["gcode_macro RESO_TUNE"].temp)|int %}
  M117 Resonance tune starting…
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  M104 S{t}
  M109 S{t}
  G90
  # Move to center-ish and lift
  {% set x = printer.toolhead.axis_maximum.x / 2 %}
  {% set y = printer.toolhead.axis_maximum.y / 2 %}
  G1 X{ x|round(1) } Y{ y|round(1) } Z20 F6000
  MEASURE_AXES_NOISE
  SHAPER_CALIBRATE
  M117 Review console output; run SAVE_CONFIG if happy

[gcode_macro PARK]
description: Lift and park front-right
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  G90
  G1 Z20 F6000
  G1 X{printer.toolhead.axis_maximum.x - 5} Y{printer.toolhead.axis_maximum.y - 5} F9000

[safe_z_home]
home_xy_position: 60,104.5
z_hop: 5
z_hop_speed: 5

[exclude_object]

# -------------------------------
# i3 Mini — Custom Minimal Menu
# -------------------------------

# Hide all default branches (keep this)
[menu __main __tune]
type: disabled
[menu __main __octoprint]
type: disabled
[menu __main __sdcard]
type: disabled
[menu __main __control]
type: disabled
[menu __main __temp]
type: disabled
[menu __main __filament]
type: disabled
[menu __main __setup]
type: disabled

# Rename Main
[menu __main]
type: list
name: i3 Mini

# ---- QUICK ----
[menu __main __quick]
type: list
name: Quick

[menu __main __quick __home_all]
type: command
name: Home All
gcode: G28

[menu __main __quick __preheat_pla]
type: command
enable: {'extruder' in printer}
name: Preheat (PLA)
gcode:
    M104 S200

[menu __main __quick __cooldown]
type: command
enable: {'extruder' in printer}
name: Cooldown
gcode:
    M104 S0

[menu __main __quick __steppers_off]
type: command
name: Steppers Off
gcode:
    M84
    M18

# ---- MOTION ----
[menu __main __motion]
type: list
name: Motion

# 10mm moves
[menu __main __motion __move_10]
type: list
name: Move 10mm

[menu __main __motion __move_10 __x]
type: input
name: X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=mv
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=mv

[menu __main __motion __move_10 __y]
type: input
name: Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=mv
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=mv

[menu __main __motion __move_10 __z]
type: input
name: Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=mv
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=mv

# 1mm moves
[menu __main __motion __move_1]
type: list
name: Move 1mm

[menu __main __motion __move_1 __x]
type: input
name: X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=mv
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=mv

[menu __main __motion __move_1 __y]
type: input
name: Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=mv
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=mv

[menu __main __motion __move_1 __z]
type: input
name: Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=mv
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=mv

# ---- Z OFFSET (live) ----
[menu __main __zoffset]
type: list
name: Z Offset

[menu __main __zoffset __offset]
type: input
name: {"Z:{0:+.3f}".format(menu.input)}
# start from current offset
input: {printer.gcode_move.homing_origin.z}
input_min: -2
input_max: 2
input_step: 0.02
realtime: True
gcode:
    SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

# ---- TEMPERATURES ----
[menu __main __temp]
type: list
name: Temperature

[menu __main __temp __hotend]
type: input
enable: {'extruder' in printer}
name: {"Hotend:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode: M104 S{'%.0f' % menu.input}

[menu __main __temp __preset_pla]
type: command
enable: {'extruder' in printer}
name: Set 200°C
gcode: M104 S200

[menu __main __temp __preset_abs]
type: command
enable: {'extruder' in printer}
name: Set 240°C
gcode: M104 S240

# ---- FILAMENT ----
[menu __main __filament]
type: list
name: Filament

[menu __main __filament __heat_200]
type: command
enable: {'extruder' in printer}
name: Heat to 200°C
gcode: M104 S200

[menu __main __filament __load_slow]
type: command
name: Load (slow)
gcode:
    SAVE_GCODE_STATE NAME=fil
    M83
    G1 E50 F240
    RESTORE_GCODE_STATE NAME=fil

[menu __main __filament __unload_slow]
type: command
name: Unload (slow)
gcode:
    SAVE_GCODE_STATE NAME=fil
    M83
    G1 E-50 F240
    RESTORE_GCODE_STATE NAME=fil

# ---- PRINT (only shows if you enable virtual_sdcard later) ----
[menu __main __print]
type: vsdlist
enable: {('virtual_sdcard' in printer)}
name: Print from SD

# ---- SYSTEM ----
[menu __main __system]
type: list
name: System

[menu __main __system __save]
type: command
name: Save config
gcode: SAVE_CONFIG

[menu __main __system __restart_fw]
type: command
name: Restart FW
gcode: FIRMWARE_RESTART

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.210
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.347500, -0.122500, 0.055000, 0.037500, 0.185000
#*# 	  -0.427500, -0.175000, -0.040000, 0.125000, 0.055000
#*# 	  -0.425000, -0.135000, -0.012500, 0.007500, 0.052500
#*# 	  -0.352500, -0.117500, -0.077500, -0.020000, 0.030000
#*# 	  -0.400000, -0.065000, 0.050000, -0.010000, 0.087500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 115.0
#*# min_y = 5.0
#*# max_y = 97.48
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 61.4
#*# shaper_type_y = ei
#*# shaper_freq_y = 98.0

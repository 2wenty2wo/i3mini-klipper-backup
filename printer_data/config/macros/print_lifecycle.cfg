# ─────────────────────────────────────────────────────────────────────────────
# PRINT LIFECYCLE: start/end, pause/resume, parking, cancel, KAMP toggles
# START_PRINT calls KAMP's BED_MESH_CALIBRATE and LINE_PURGE when enabled.
# ─────────────────────────────────────────────────────────────────────────────

# Simple KAMP toggles for line purge (mesh toggle is separate var below)
[gcode_macro KAMP_ON]
gcode:
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=do_purge VALUE=1
  RESPOND PREFIX=KAMP MSG="Line purge ENABLED. (No change to homing/mesh.)"

[gcode_macro KAMP_OFF]
gcode:
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=do_purge VALUE=0
  RESPOND PREFIX=KAMP MSG="Line purge DISABLED. (No change to homing/mesh.)"

# Quick manual park button (front-right)
[gcode_macro PARK]
description: Lift and park front-right
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %} G28 {% endif %}
  G90
  G1 Z20 F6000
  G1 X{printer.toolhead.axis_maximum.x - 5} Y{printer.toolhead.axis_maximum.y - 5} F9000

# Reusable safe park helper (back-right)
[gcode_macro _SAFE_PARK]
description: Lift Z and park back-right safely (fits 120x135 bed)
variable_park_z: 10
gcode:
  {% set parkz = params.Z|default(printer["gcode_macro _SAFE_PARK"].park_z)|int %}
  {% set xmax = printer.configfile.config.stepper_x.position_max|default(120)|int %}
  {% set ymax = printer.configfile.config.stepper_y.position_max|default(135)|int %}
  {% set lift = parkz if parkz > 2 else 2 %}
  SAVE_GCODE_STATE NAME=__park
  G91
  G1 Z{lift} F600
  G90
  G1 X{ x_max|default(xmax) - 5 } Y{ y_max|default(ymax) - 5 } F6000
  RESTORE_GCODE_STATE NAME=__park

# Full-clear safe park (top-right + bed forward)
[gcode_macro _PARK_TR_SAFE]
description: Clamp-safe park: Z to (Zmax-0.5), X/Y to (max - margins), bed forward
variable_x_margin: 2.0
variable_y_margin: 2.0
variable_z_margin: 0.5
gcode:
  {% set x_max = (printer.configfile.config.stepper_x.position_max|default(120))|float %}
  {% set y_max = (printer.configfile.config.stepper_y.position_max|default(135))|float %}
  {% set z_max = (printer.configfile.config.stepper_z.position_max|default(100))|float %}
  {% set xm = (params.X_MARGIN|default(printer["gcode_macro _PARK_TR_SAFE"].x_margin))|float %}
  {% set ym = (params.Y_MARGIN|default(printer["gcode_macro _PARK_TR_SAFE"].y_margin))|float %}
  {% set zm = (params.Z_MARGIN|default(printer["gcode_macro _PARK_TR_SAFE"].z_margin))|float %}
  {% set z_now = printer.toolhead.position.z|float %}
  {% set z_target = (z_max - zm) if (z_max - zm) > z_now else (z_now) %}
  G90
  G1 Z{ z_target|round(3) } F18000
  G1 X{ (x_max - xm)|round(3) } F15000
  G1 Y{ (y_max - ym)|round(3) } F15000

# ─────────────────────────────────────────────────────────────────────────────
# START_PRINT — cold/idle probe (no ooze), then heat to temp, then purge
# Notes:
# - No E moves occur before M109 finishes, so no "Extrude below minimum temp".
# - If you want to probe truly cold, leave idle_temp at 0.
# - If you want a little warmth to speed up heating later, set idle_temp ~150.
# ─────────────────────────────────────────────────────────────────────────────
[gcode_macro START_PRINT]
description: Home → (optional cold/idle) adaptive mesh → Smart Park → heat to temp → optional Line Purge (no E moves before M109)
# Toggles you can change from the console/UI:
variable_do_mesh: 1            # 1=run KAMP adaptive mesh via BED_MESH_CALIBRATE
variable_do_purge: 1           # 1=run LINE_PURGE after heating
variable_cold_probe: 1         # 1=keep nozzle cold/idle during mesh to avoid oozing
variable_idle_temp: 150        # temp used during mesh if cold_probe==1; 0 = stay cold

gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|int %}
  {% set do_mesh       = printer["gcode_macro START_PRINT"].do_mesh|int %}
  {% set do_purge      = printer["gcode_macro START_PRINT"].do_purge|int %}
  {% set cold_probe    = printer["gcode_macro START_PRINT"].cold_probe|int %}
  {% set idle_temp     = printer["gcode_macro START_PRINT"].idle_temp|int %}

  ; --- Sane modal states ---
  G21                      ; mm
  G90                      ; absolute pos
  M82                      ; absolute extrusion
  M107                     ; part fan off

  ; --- Pre-mesh temperature handling (NO E moves here) ---
  {% if cold_probe == 1 %}
    {% if idle_temp > 0 %}
      M104 S{idle_temp}    ; low idle temp to reduce ooze while probing
    {% else %}
      M104 S0              ; stay cold during mesh
    {% endif %}
  {% endif %}

  ; --- Home (BLTouch safe_z_home in your config) ---
  G28

  ; --- Adaptive mesh while nozzle is cold/idle (no oozing) ---
  {% if do_mesh == 1 %}
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
  {% endif %}

  ; --- Smart Park keeps hotend away from bed while we finish heating ---
  SMART_PARK

  ; --- Now heat to full temp and WAIT (only after this can we move E) ---
  M104 S{EXTRUDER_TEMP}
  M109 S{EXTRUDER_TEMP}

  ; --- Optional KAMP purge (E moves now allowed because we're hot) ---
  {% if do_purge == 1 %}
    LINE_PURGE
    ; Tiny tidy-up to avoid purge tail catching (all at temp):
    {% set ph = (printer["gcode_macro _KAMP_Settings"].purge_height|default(0.30))|float %}
    G92 E0
    G1 E-0.6 F1800          ; small retract to snip the string
    G1 Z{ (ph + 1.0) } F1200
    G1 X20 Y20 F6000        ; move away from the purge start
    G1 E0.6 F150            ; push a touch back so extruder is primed
    G92 E0
  {% endif %}

  M117 Printing...

# END_PRINT: retract, cool, safe park (top-right + bed forward)
[gcode_macro END_PRINT]
description: Cooldown and park (top-right + bed forward)
gcode:
  M107
  M104 S0
  G91
  G1 E-1 F1800
  G90
  _PARK_TR_SAFE
  M84

# Pause/Resume with safe park and optional keep-hot
[gcode_macro PAUSE]
description: Pause with park and fan/heater handling
rename_existing: BASE_PAUSE
gcode:
  {% set keep_hot = params.KEEP_HOT|default(1)|int %}
  BASE_PAUSE
  _SAFE_PARK Z=10
  M106 S0
  {% if not keep_hot %} M104 S0 {% endif %}

[gcode_macro RESUME]
description: Resume and restore state
rename_existing: BASE_RESUME
gcode:
  BASE_RESUME

# ─────────────────────────────────────────────────────────────────────────────
# CANCEL_PRINT — safe version that works even when printing from virtual SD
# Notes:
# - Removed SDCARD_RESET_FILE (that’s what caused your error).
# - Only performs a retract if the nozzle is hot enough to legally extrude.
# ─────────────────────────────────────────────────────────────────────────────
[gcode_macro CANCEL_PRINT]
description: Cancel with queue flush, optional retract (if hot), cool, park, then base cancel
rename_existing: BASE_CANCEL_PRINT
gcode:
  M400                         ; wait for moves to finish
  CLEAR_PAUSE
  SAVE_GCODE_STATE NAME=__canc
  M83                          ; relative extrusion

  ; Only retract if we’re above min_extrude_temp to avoid "Extrude below minimum temp"
  {% set min_ext = printer.configfile.config.extruder.min_extrude_temp|default(170)|int %}
  {% set hot_enough = printer.extruder.temperature|float >= (min_ext|float) %}
  {% if hot_enough %}
    G1 E-2 F1800
  {% endif %}

  RESTORE_GCODE_STATE NAME=__canc
  M106 S0                      ; fan off
  M104 S0                      ; nozzle off
  _PARK_TR_SAFE                ; lift & park out of the way

  ; Do NOT call SDCARD_RESET_FILE here; it errors when run from virtual SD prints.
  ; Mainsail/Fluidd UI will clear the file automatically on cancel.

  BASE_CANCEL_PRINT

# ─────────────────────────────────────────────────────────────────────────────
# FILAMENT MANAGEMENT — segmented moves (≤50 mm) to satisfy Klipper’s guard
# Drop this whole block at the END of macros/print_lifecycle.cfg and RESTART.
# ─────────────────────────────────────────────────────────────────────────────

# Centralized defaults so you (or AI) can tweak once and reuse everywhere
[gcode_macro _FILAMENT_DEFAULTS]
description: Defaults for filament load/unload on Wanhao i3 Mini (Bowden ~440 mm)
variable_bowden_len: 440         # mm of filament from extruder gears to melt zone
variable_extra_clear: 40         # mm extra to fully clear extruder gears/tube end
variable_slow_tip_mm: 6          # mm slow pull to neck the tip (clean exit)
variable_push_prime_mm: 10       # mm tiny push before tip-shape
variable_purge_default: 20       # mm purge after load
variable_temp_default: 205       # °C default temp (PLA). Override via TEMP=...
gcode:

# INTERNAL HELPER — do extrude-only moves in <=50 mm chunks to avoid:
# "Extrude only move too long ... See max_extrude_only_distance"
[gcode_macro _E_SEG]
description: Helper that segments long extrude-only moves (never >50 mm per G1)
# Usage:  _E_SEG E=<±distance_mm> F=<feedrate>
gcode:
  {% set dist = params.E|float %}
  {% set feed = params.F|int %}
  {% set step = 50.0 if dist >= 0 else -50.0 %}
  {% set chunks = (abs(dist) / 50.0)|int %}
  {% set remainder = dist - (step * chunks) %}
  G91
  {% for i in range(chunks) %}
    G1 E{step} F{feed}
  {% endfor %}
  {% if abs(remainder) > 0.0001 %}
    G1 E{remainder|round(3)} F{feed}
  {% endif %}
  G90

# UNLOAD — heat → shape tip → clear heatbreak → retract full Bowden + extra
[gcode_macro UNLOAD_FILAMENT]
description: Heat and fully retract filament out of the extruder (Bowden)
gcode:
  {% set T = params.TEMP|default(printer["gcode_macro _FILAMENT_DEFAULTS"].temp_default)|int %}
  {% set L = printer["gcode_macro _FILAMENT_DEFAULTS"].bowden_len|float %}
  {% set EXTRA = printer["gcode_macro _FILAMENT_DEFAULTS"].extra_clear|float %}
  {% set TIP = printer["gcode_macro _FILAMENT_DEFAULTS"].slow_tip_mm|float %}
  {% set PUSH = printer["gcode_macro _FILAMENT_DEFAULTS"].push_prime_mm|float %}
  {% set total = (L + EXTRA)|float %}

  M117 Unloading filament…
  M104 S{T}
  M109 S{T}                 ; wait for temp: avoids "Extrude below min temp"

  ; Tip-shaping: cleaner pull reduces strings and blobs on next load
  G91
  G1 E{PUSH} F300           ; pack melt
  G4 P1200                  ; ~1.2 s soak
  G1 E-{TIP} F240           ; slow neck
  G90

  ; Clear heatbreak gently
  _E_SEG E=-30 F1800

  ; Long retract through Bowden + a little extra to clear the gears
  _E_SEG E=-{total|round(3)} F3000

  M117 Filament unloaded — remove spool

# LOAD — heat → drive through Bowden (segmented) → ease into hotend → purge
[gcode_macro LOAD_FILAMENT]
description: Heat and load filament to nozzle, purge, tiny anti-ooze
gcode:
  {% set T = params.TEMP|default(printer["gcode_macro _FILAMENT_DEFAULTS"].temp_default)|int %}
  {% set L = printer["gcode_macro _FILAMENT_DEFAULTS"].bowden_len|float %}
  {% set PURGE = params.PURGE|default(printer["gcode_macro _FILAMENT_DEFAULTS"].purge_default)|float %}

  M117 Loading filament…
  M104 S{T}
  M109 S{T}

  ; Drive most of the way fast (segmented to <=50 mm each)
  _E_SEG E={L|round(3)} F3000

  ; Ease into melt zone, then purge for a solid flow
  _E_SEG E=15 F300
  _E_SEG E={PURGE|round(3)} F300

  ; Small anti-ooze
  _E_SEG E=-1 F1800

  M117 Filament loaded — ready to print